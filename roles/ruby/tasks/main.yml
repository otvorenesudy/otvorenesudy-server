---
- name: Install rbenv dependencies
  apt:
    name:
      - git-core
      - build-essential
      - libreadline-dev
      - libssl-dev
      - libyaml-dev
      - libxml2-dev
      - libxslt1-dev
      - zlib1g-dev
      - libffi-dev
    state: present

- name: Check if rbenv is already installed
  stat: path=/home/{{ user }}/.rbenv
  register: st

- name: Install rbenv
  git:
    repo: https://github.com/sstephenson/rbenv.git
    dest: /home/{{ user }}/.rbenv
    depth: 1
  when: not st.stat.exists

- name: Check if rbenv-build is already installed
  stat: path=/home/{{ user }}/.rbenv/plugins/ruby-build
  register: st

- name: Install ruby-build plugin
  git:
    repo: https://github.com/sstephenson/ruby-build.git
    dest: /home/{{ user }}/.rbenv/plugins/ruby-build
  when: not st.stat.exists

- name: Update ruby-build plugin
  become_user: '{{ user }}'
  command: 'chdir=/home/{{ user }}/.rbenv/plugins/ruby-build git pull'

- name: Grant application user access to rbenv
  file: path=/home/{{ user }}/.rbenv group=deploy mode='g=rwx' recurse=yes

- name: Add rbenv to application user $PATH
  become_user: '{{ user }}'
  lineinfile:
    dest: ~/.profile
    line: 'export PATH="~/.rbenv/bin:$PATH"'
    state: present

- name: Add gem options to ~/.gemrc
  become_user: '{{ user }}'
  lineinfile:
    dest: ~/.gemrc
    line: 'gem: --no-ri --no-rdoc'
    state: present
    create: true

- name: Initialize rbenv on login
  become_user: '{{ user }}'
  lineinfile:
    dest: ~/.profile
    line: 'eval "$(rbenv init -)"'
    state: present

- name: Detect installed ruby versions
  command: 'sudo -iu {{ user }} rbenv versions'
  register: rbenv_versions_output

- name: Install ruby version
  command: 'sudo -iu {{ user }} rbenv install {{ item }}'
  when: item not in rbenv_versions_output.stdout
  with_items: '{{ rubies }}'

- name: Set initial ruby
  command: 'sudo -iu {{ user }} rbenv global {{ rubies.0 }}'

- name: Install bundler
  command: 'sudo -iu {{ user }} gem install bundler --no-ri --no-rdoc'
